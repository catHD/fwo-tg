const { Markup } = require('telegraf');
const BattleKeyboard = require('./BattleKeyboard');
const arena = require('../arena');
const { getIcon } = require('../arena/MiscService');
/**
 * –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–±—â–∏–π —á–∞—Ç
 * @typedef {import ('../arena/PlayerService').default} Player
 * @typedef {import ('../arena/GameService')} Game
 */

const chatId = process.env.BOT_CHATID || -1001483444452;

module.exports = {
  /** @type {import('telegraf').Telegraf<import('../fwo').Bot>} */
  bot: null,
  /** @type {Object<string, number>} */
  messages: {},
  /** @type {Object<string, number>} */
  statusMessages: {},
  /**
   * @param {string} data - —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {Number|String} [id=chatId] - id —á–∞—Ç–∞
   */
  async broadcast(data, id = chatId) {
    await this.bot.telegram.sendMessage(id, data, { parse_mode: 'Markdown' });
  },

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã –∏–≥—Ä–æ–∫–∞–º
   * @param {string} data - —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {number} id - id —á–∞—Ç–∞
   */
  async sendStatus(data, id) {
    try {
      if (!this.statusMessages[id]) {
        const message = await this.bot.telegram.sendMessage(id, data, { parse_mode: 'Markdown' });
        this.statusMessages[id] = message.message_id;
      } else {
        this.updateStatus(data, id);
      }
    } catch (e) {
      console.log(`error: sendOrderButtons: ${e.message} for ${id}`);
    }
  },
  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã —É –∏–≥—Ä–æ–∫–æ–≤
   * @param {string} data - —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {number} id - id —á–∞—Ç–∞
   */
  async updateStatus(data, id) {
    await this.bot.telegram.editMessageText(
      id,
      this.statusMessages[id],
      '',
      data,
      { parse_mode: 'Markdown' },
    );
  },
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∑–∞–∫–∞–∑–∞. –ë–∞–∑–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ + –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞–≥–∏–∏
   * @param {Player} player - –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
   */
  getOrderButtons(player) {
    return new BattleKeyboard(player)
      .setActions()
      .setMagics()
      .setSkills()
      .render();
  },
  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –∑–∞–∫–∞–∑–∞
   * @param {Player} player - –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
   */
  async sendOrderButtons(player) {
    try {
      const message = await this.bot.telegram.sendMessage(
        player.tgId,
        '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ',
        Markup.inlineKeyboard(this.getOrderButtons(player)).resize().extra(),
      );
      this.messages[message.chat.id] = message.message_id;
    } catch (e) {
      console.log(`error: sendOrderButtons: ${e.message} for ${player.id}`);
    }
  },

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞
   * @param {Player} player - –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
   */
  async removeMessages(player) {
    try {
      await this.bot.telegram.deleteMessage(
        player.tgId,
        this.messages[player.tgId],
      );
    } catch (e) {
      console.log(`error: removeMessages: ${e.message} for ${player.id}`);
    }
  },

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –∏–≥—Ä—ã
   * @param {Player} player - –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
   */
  async removeStatusMessages(player) {
    try {
      await this.bot.telegram.deleteMessage(
        player.tgId,
        this.statusMessages[player.tgId],
      );
      delete this.statusMessages[player.tgId];
    } catch (e) {
      console.log(`error: removeStatusMessages: ${e.message} for ${player.id}`);
    }
  },

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –ª–æ–±–±–∏
   * @param {Player} player
   */
  async sendExitButton(player) {
    try {
      await this.removeStatusMessages(player);

      const { exp, gold } = player.stats.collect;
      const character = arena.characters[player.id];
      const {
        autoreg, nickname, lvl, prof, clan,
      } = arena.characters[player.id];

      const message = await this.bot.telegram.sendMessage(
        player.tgId,
        `–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –±–æ–π:
  üìñ ${exp} (${character.exp}/${character.nextLvlExp})
  üí∞ ${gold} (${character.gold})
  ${autoreg ? '–ò–¥—ë—Ç –ø–æ–∏—Å–∫ –Ω–æ–≤–æ–π –∏–≥—Ä—ã...' : ''}`,
        Markup.inlineKeyboard([
          Markup.callbackButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫', 'stop', !autoreg),
          Markup.callbackButton('–í—ã—Ö–æ–¥ –≤ –ª–æ–±–±–∏', 'exit', autoreg),
        ]).resize().extra(),
      );

      if (autoreg) {
        this.messages[message.chat.id] = message.message_id;
        this.broadcast(
          `–ò–≥—Ä–æ–∫ ${clan ? `\\[${clan.name}]` : ''} *${nickname}* (${getIcon(prof)}${lvl}) –Ω–∞—á–∞–ª –ø–æ–∏—Å–∫ –∏–≥—Ä—ã`,
        );
      }
    } catch (e) {
      console.log(`error: sendExitButton: ${e.message} for ${player.id}`);
    }
  },

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–±–µ–∂–∞–≤—à–µ–≥–æ –∏ –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –ª–æ–±–±–∏
   * @param {Player} player
   */
  async sendRunButton(player) {
    await this.removeStatusMessages(player);

    await this.bot.telegram.sendMessage(
      player.tgId,
      '–¢—ã –±–µ–∂–∞–ª –∏–∑ –±–æ—è',
      Markup.inlineKeyboard([Markup.callbackButton('–í—ã—Ö–æ–¥ –≤ –ª–æ–±–±–∏', 'exit')]).resize().extra(),
    );
  },
};
