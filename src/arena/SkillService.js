/**
 * –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç—ã —Å —É–º–µ–Ω–∏—è–º–∏
 * @typedef {import ('./Constuructors/SkillConstructor')} Skill
 * @typedef {import ('./CharacterService')} Char
 */
const skills = require('./skills');
const arena = require('./index');

module.exports = {
  skills,
  /**
   * @param {string} charId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
   * @param {string} skillId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É–º–µ–Ω–∏—è
   */
  learn(charId, skillId) {
    const skill = this.skills[skillId];
    /** @type {Char} */
    const char = arena.characters[charId];
    const charSkillLvl = char.skills[skillId] || 0;
    if (skill.lvl > char.lvl) {
      throw Error('–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –Ω–∏–∂–µ —É—Ä–æ–≤–Ω—è —É–º–µ–Ω–∏—è');
    }
    if (skill.bonusCost[charSkillLvl] > char.bonus) {
      throw Error('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–æ–Ω—É—Å–æ–≤');
    }
    if (charSkillLvl + 1 > skill.bonusCost.length) {
      throw Error(`–£–º–µ–Ω–∏–µ ${skill.name} –∏–º–µ–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å`);
    }
    char.bonus -= skill.bonusCost[charSkillLvl];
    char.learnSkill(skillId, charSkillLvl + 1);
    return char;
  },
  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —É–º–µ–Ω–∏—è
   * @param {string} skillId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É–º–µ–Ω–∏—è
   */
  show(skillId) {
    const {
      name, desc, lvl, bonusCost, displayName
    } = this.skills[skillId];
    return {
      name, desc, lvl, bonusCost, displayName,
    };
  },
  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —É–º–µ–Ω–∏—è
   * @todo
   * @param {string} skillId
   * @param {Char} char
   */
  skillDescription(skillId, char) {
    const {
      displayName, desc, lvl, bonusCost,
    } = this.show(skillId);
    const charSkillLvl = char.skills[skillId] || 0;

    return `${displayName} (${charSkillLvl === 0 ? '–ù–µ –∏–∑—É—á–µ–Ω–æ' : charSkillLvl})

${desc} ${char.lvl < lvl ? '\n\n‚ùóÔ∏è–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –Ω–∏–∂–µ —É—Ä–æ–≤–Ω—è —É–º–µ–Ω–∏—è' : ''}

${charSkillLvl >= bonusCost.length ? '–ò–∑—É—á–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —É–º–µ–Ω–∏—è'
    : `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑—É—á–µ–Ω–∏—è: ${bonusCost[charSkillLvl]}üí° (${char.bonus}üí°) ${bonusCost[charSkillLvl] > char.bonus ? '‚ùóÔ∏è' : '‚úÖ'}`
}`;
  },
};
