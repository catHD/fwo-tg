const Scene = require('telegraf/scenes/base');
const Stage = require('telegraf/stage');

const { leave } = Stage;
const lobby = new Scene('lobby');
const loginHelper = require('../helpers/loginHelper');

lobby.enter(({ reply, session }) => {
  reply(
    `Lobby
–¢–∞–∫ —Ç–∞–∫, –∑–Ω–∞—á–∏—Ç —Ç—ã ${session.character.nickname}
–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ‚¨Ü ${session.character.lvl} üí∞ ${session.character.gold} üìñ ${session.character.exp}

–û—Ç—Å—é–¥–∞ –º–æ–∂–Ω–æ –≤—ã–π—Ç–∏: /exit 
–ò–ª–∏ —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: /remove 
–¢–µ—Å—Ç–æ–≤—ã–µ —Ä–∞–∑–¥–µ–ª—ã: /profile /battle /shop
`,
  );
});

lobby.command('exit', ({ scene }) => {
  leave();
  scene.enter('greeter');
});

lobby.command('profile', ({ scene }) => {
  leave();
  scene.enter('profile');
});

lobby.command('battle', ({ scene }) => {
  leave();
  scene.enter('battleScene');
});

lobby.command('shop', ({ scene }) => {
  leave();
  scene.enter('shop');
});

lobby.command('remove', async ({
  session, scene, reply, from,
}) => {
  const resp = await loginHelper.remove(from.id);
  session.character = null;
  if (resp) {
    reply(
      '–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –±—ã–ª —É–¥–∞–ª—ë–Ω!',
    );
    leave();
    scene.enter('greeter');
  } else {
    reply(
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞',
    );
    leave();
    scene.enter('greeter');
  }
});


module.exports = lobby;
