const Scene = require('telegraf/scenes/base');
const Stage = require('telegraf/stage');
const Markup = require('telegraf/markup');

const {
  leave,
} = Stage;
const lobby = new Scene('lobby');
const loginHelper = require('../helpers/loginHelper');

lobby.enter(({ replyWithMarkdown, session }) => replyWithMarkdown(
  `Lobby
–¢–∞–∫ —Ç–∞–∫, –∑–Ω–∞—á–∏—Ç —Ç—ã *${session.character.nickname}*
–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ‚¨Ü ${session.character.lvl} üí∞ ${session.character.gold} üìñ ${session.character.exp}
`, Markup.keyboard([
    ['‚öî –í –±–æ–π'],
    ['üòé –ü—Ä–æ—Ñ–∏–ª—å', 'üè™ –ú–∞–≥–∞–∑–∏–Ω'],
    ['‚ò∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏', '‚ùì –ü–æ–º–æ—â—å'],
  ])
    .resize()
    .extra(),
));

lobby.command('exit', ({
  scene,
}) => {
  leave();
  scene.enter('greeter');
});

lobby.hears('üòé –ü—Ä–æ—Ñ–∏–ª—å', ({ scene }) => {
  leave();
  scene.enter('profile');
});

lobby.hears('‚öî –í –±–æ–π', ({ scene }) => {
  leave();
  scene.enter('battleScene');
});

lobby.command('remove', async ({
  session,
  scene,
  reply,
  from,
}) => {
  const resp = await loginHelper.remove(from.id);
  session.character = null;
  if (resp) {
    reply(
      '–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –±—ã–ª —É–¥–∞–ª—ë–Ω!',
    );
    leave();
    scene.enter('greeter');
  } else {
    reply(
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞',
    );
    leave();
    scene.enter('greeter');
  }
});


module.exports = lobby;
